; Script generated by the Inno Script Studio Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppDESKTOPName "FJD Trion Model"
#define MyAppName "FJD Trion Model"
#define MyAppCode "0007"
#define MyAppVersion "V1.000.D.0111"
#define MyAppPublisher "FJDynamics"
#define MyAppURL "http://www.fjdynamics.com/"
#define MyAppExeName "FJDTrionModel.exe"
#define MYCompanyName "FJDynamics"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{947A54B2-7EA4-A30B-ABF0-EDF65505C0A5}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
ArchitecturesInstallIn64BitMode=x64
ArchitecturesAllowed=x64
DefaultDirName={code:GetDefaultInstallRoot}\{#MyAppName}
DisableDirPage=no
UsePreviousAppDir=yes
DefaultGroupName=FJDTrionModel
DisableProgramGroupPage=yes
OutputDir="D:\版本PDB文件\111.S1.T2"
OutputBaseFilename=FJDTrionModelV1.000.D.0111.S1.T2.setup
SetupIconFile=.\logo.ico
Compression=lzma
SolidCompression=yes
ChangesEnvironment=true
PrivilegesRequired=admin
AlwaysRestart=false
;LanguageDetectionMethod=uilanguage
ShowLanguageDialog=yes
;右上角图片背景颜色
WizardSmallImageBackColor=clBlue
;右边图片背景颜色
WizardImageBackColor=clBlue
;左边图片是否拉伸 - yes;no
WizardImageStretch=yes
;右上角图片
;WizardSmallImageFile=FilesToInstall\logo.bmp

[Languages]
Name: "chinesesimplified"; MessagesFile: "compiler:Languages\ChineseSimplified.isl"; LicenseFile : E:\Metahub_ts\lidar-platform\fj_pc_software\package\windows\licence\licence.txt
Name: "chinesetraditional"; MessagesFile: "compiler:Languages\ChineseTraditional.isl"; LicenseFile : E:\Metahub_ts\lidar-platform\fj_pc_software\package\windows\licence\licencezh_tw.txt
Name: "english"; MessagesFile: "compiler:Languages\English.isl"; LicenseFile : E:\Metahub_ts\lidar-platform\fj_pc_software\package\windows\licence\licenceen.txt
Name: "japanese"; MessagesFile: "compiler:Languages\Japanese.isl"; LicenseFile : E:\Metahub_ts\lidar-platform\fj_pc_software\package\windows\licence\licence_ja.txt
Name: "Spanish"; MessagesFile: "compiler:Languages\Spanish.isl"; LicenseFile : E:\Metahub_ts\lidar-platform\fj_pc_software\package\windows\licence\licence_es.txt
;Name: "Italian"; MessagesFile: "compiler:Languages\Italian.isl"; LicenseFile : E:\Metahub_ts\lidar-platform\fj_pc_software\package\windows\licence\licence_it.txt
;Name: "Russian"; MessagesFile: "compiler:Languages\Russian.isl"; LicenseFile : E:\Metahub_ts\lidar-platform\fj_pc_software\package\windows\licence\licence_ru.txt

[CustomMessages]
english.DeleteUserDataTip="Do you want to delete user data?"
english.InstallDriverTip="Installing the operating environment, please wait…"
english.UninstallOldVerion="You have installed FJD Trion Model. Do you want to uninstall the old version first."

chinesesimplified.DeleteUserDataTip="您是否要删除用户数据及配置？"
chinesesimplified.InstallDriverTip="正在安装运行环境，请稍候"
chinesesimplified.UninstallOldVerion="您已安装FJD Trion Model，是否先卸载旧版本"

chinesetraditional.DeleteUserDataTip="您是否要刪除使用者資料及配置？"
chinesetraditional.InstallDriverTip="正在安裝運行環境，請稍候"
chinesetraditional.UninstallOldVerion="您已安裝FJD Trion Model，是否先卸載舊版本"

japanese.DeleteUserDataTip="ユーザー データと構成を削除しますか?"
japanese.InstallDriverTip="ランタイム環境のインストール中までお待ちください"
japanese.UninstallOldVerion="古いバージョンをアンインストールし、最新のバージョンをインストールしてもよろしいでしょうか"

Spanish.DeleteUserDataTip="¿Desea eliminar los datos de usuario y las configuraciones?"
Spanish.InstallDriverTip="Instalando el entorno de tiempo de ejecución, por favor espere..."
Spanish.UninstallOldVerion="Ha instalado FJD Trion Model. ¿Le gustaría desinstalar primero la versión anterior?"

;Italian.DeleteUserDataTip="Vuoi eliminare i dati utente e le configurazioni?"
;Italian.InstallDriverTip="Installazione dell'ambiente runtime, attendere..."
;Italian.UninstallOldVerion="Hai installato FJD Trion Model. Vuoi disinstallare prima la vecchia versione?"

;Russian.DeleteUserDataTip="Вы хотите удалить пользовательские данные и конфигурации?"
;Russian.InstallDriverTip="Установка среды выполнения, пожалуйста, подождите..."
;Russian.UninstallOldVerion="Вы установили FJD Trion Model. Хотите сначала удалить старую версию?"


;[Tasks]
;Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: "E:\Metahub_ts\build\bin\Release\*"; DestDir: "{app}\bin"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "E:\Metahub_ts\lidar-platform\fj_pc_software\package\windows\redist\*";   DestDir: "{app}\redist"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "E:\Metahub_ts\lidar-platform\fj_pc_software\package\windows\vcruntime\*"; DestDir: "{app}\bin"; Flags: ignoreversion recursesubdirs createallsubdirs
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{group}\FJDTrionModel\{#MyAppName}"; Filename: "{app}\bin\{#MyAppExeName}"; IconFilename: "{app}\bin\FJDTrionModel.ico"
Name: {group}\FJDTrionModel\Uninstall {#MyAppName}; Filename:{uninstallexe}; WorkingDir: {app}; IconFilename: "{app}\bin\FJDTrionModel.ico"
Name: "{commondesktop}\FJD Trion Model"; Filename: "{app}\bin\{#MyAppExeName}"; IconFilename: "{app}\bin\FJDTrionModel.ico";
Name: "{userappdata}\Microsoft\Internet Explorer\Quick Launch\{#MyAppName}"; Filename: "{app}\bin\{#MyAppExeName}"; IconFilename:"{app}\bin\FJDTrionModel.ico"

[Dirs]
Name: "{userappdata}\FJDTrionModel\config"


[InstallDelete]
Type: filesandordirs; Name: "{group}/FJCloudCompare"
Type: filesandordirs; Name: "{group}/FJDTrionMetahub"
Type: filesandordirs; Name: "{group}/TrionMetahub"
Type: filesandordirs; Name: "{group}/FJDTrionModel"

Type: files; name: "{userdesktop}\FJCloudCompare.lnk"
Type: files; name: "{commondesktop}\FJCloudCompare\FJCloudCompare.lnk"
Type: files; Name: "{group}\FJCloudCompare\FJCloudCompare.lnk"

Type: filesandordirs; Name: "{group}/FJDTrionMetahub"
Type: files; name: "{userdesktop}\FJDTrionMetahub.lnk"
Type: files; name: "{commondesktop}\FJDTrionMetahub\FJDTrionMetahub.lnk"
Type: files; Name: "{group}\FJDTrionMetahub\FJDTrionMetahub.lnk"

Type: files; name: "{userdesktop}\Trion Metahub.lnk"
Type: files; name: "{commondesktop}\TrionMetahub\Trion Metahub.lnk"
Type: files; Name: "{group}\TrionMetahub\Trion Metahub.lnk"
Type: files; Name: "{userappdata}\TrionMetahub\config\config.ini"
Type: files; Name: "{userappdata}\TrionMetahub\config\fjslam.yaml"
Type: files; Name: "{userappdata}\TrionMetahub\config\correction.csv"

Type: files; name: "{userdesktop}\FJD Trion Model.lnk"
Type: files; name: "{commondesktop}\FJDTrionModel\FJD Trion Model.lnk"
Type: files; Name: "{group}\FJDTrionModel\FJD Trion Model.lnk"
Type: files; Name: "{userappdata}\FJDTrionModel\config\fjslam.yaml"
Type: files; Name: "{userappdata}\FJDTrionModel\config\correction.csv"
Type: files; name: "{userdesktop}\Trion Metahub.lnk"
Type: files; name: "{userdesktop}\Trion Metahub.lnk"
Type: files; name: "{userdesktop}\Trion Metahub.lnk"

[UninstallDelete]
Type: files; name: "{userdesktop}\Trion Metahub.lnk"
Type: files; name: "{commondesktop}\TrionMetahub\Trion Metahub.lnk"
Type: files; Name: "{group}\TrionMetahub\Trion Metahub.lnk"
Type: files; Name: "{userappdata}\TrionMetahub\config\config.ini"
Type: files; Name: "{userappdata}\TrionMetahub\config\fjslam.yaml"
Type: files; Name: "{userappdata}\TrionMetahub\config\correction.csv"

Type: files; name: "{userdesktop}\FJD Trion Model.lnk"
Type: files; name: "{commondesktop}\FJDTrionModel\FJD Trion Model.lnk"
Type: files; Name: "{group}\FJDTrionModel\FJD Trion Model.lnk"
Type: files; Name: "{userappdata}\FJDTrionModel\config\fjslam.yaml"
Type: files; Name: "{userappdata}\FJDTrionModel\config\correction.csv"



;自定义注册表，用于在用户系统中创建，修改或删除注册表健值
[Registry]
Root: HKLM64; Subkey: Software\{#MyAppName}; ValueType: string; ValueName: code; ValueData: "{#MyAppCode}"; Flags: uninsdeletekey
Root: HKLM64; Subkey: Software\{#MyAppName}; ValueType: string; ValueName: version_env; ValueData: "prd"; Flags: uninsdeletekey
Root: HKLM64; Subkey: Software\{#MyAppName}; ValueType: string; ValueName: version_name; ValueData: "{#MyAppVersion}"; Flags: uninsdeletekey
Root: HKLM64; Subkey:Software\Microsoft\Windows\CurrentVersion\Uninstall\{#MyAppName}; ValueType: string; ValueName: UninstallString; ValueData: "{uninstallexe}"; Flags: uninsdeletekey

[run]
Filename: {app}\redist\vc2015_redist_x64.exe; Parameters: /q /norestart /suppressmsgboxes; WorkingDir: {app}\redist; Flags: skipifdoesntexist; StatusMsg: "{cm:InstallDriverTip}"; Check: NeedInstallVC9SP2; BeforeInstall: UpdateProgressbar(70); AfterInstall: UpdateProgressBar(80);
;Filename: {app}\redist\HASPUserSetup.exe; Description: "Install HASPUserSetup"; Flags: postinstall skipifsilent;


[Code]
var
 vc9SP2Missing: Boolean;
 dotNet4Missing : Boolean;
 PageName, PageDescription: TLabel;

function NeedInstallVC9SP2(): Boolean;
begin
 Result := vc9SP2Missing;
end;

function NeedInstallDotNet4():boolean; 
begin
  Result := dotNet4Missing;
end;


function GetMyParam(PName:String):String;
var
  CmdLine : String;
  CmdLineLen : Integer;//参数的个数
  i : Integer;
begin
    CmdLineLen:=ParamCount();
    for i:=0 to CmdLineLen do
    begin
    CmdLine:=ParamStr(i);
    if CmdLine= PName then
      begin
          CmdLine:=ParamStr(i+1);
          Result := CmdLine;
          Exit;
      end;
    end;

end;

function GetDefaultInstallRoot(Param: String): String;
begin
    Result := ExpandConstant('{pf}\{#MYCompanyName}');
end;

procedure SetProgressBarMax(Ratio: Integer);
begin
  WizardForm.ProgressGauge.Max := WizardForm.ProgressGauge.Max * Ratio;
end;

procedure UpdateProgressBar(Position: Integer);
begin
  WizardForm.ProgressGauge.Position := Position * WizardForm.ProgressGauge.Max div 100;
end;

function InitializeSetup(): Boolean;
var
 OldState: Boolean;
 ResultCode: Integer; 
 ResultStr: String;
 version: Cardinal;
MainRun: HWND;
MVRun:HWND;
begin

MainRun := FindWindowByWindowName(ExpandConstant('{#MyAppName}'));
MVRun := FindWindowByWindowName(ExpandConstant('{#MyAppName}'));
if (MainRun<>0) or (MVRun<>0) then
  begin
          if MainRun<>0 then
          begin
            PostMessage(MainRun, 18, 0, 0);               
          end;
        if MVRun<>0 then
          begin
            PostMessage(MVRun, 18, 0, 0);                  
          end;                                    
      end;

MainRun := FindWindowByWindowName('Trion Metahub');
MVRun := FindWindowByWindowName('Trion Metahub');
if (MainRun<>0) or (MVRun<>0) then
  begin
          if MainRun<>0 then
          begin
            PostMessage(MainRun, 18, 0, 0);               
          end;
        if MVRun<>0 then
          begin
            PostMessage(MVRun, 18, 0, 0);                  
          end;                             
      end;

  if RegQueryStringValue(HKLM64, 'SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{947A54B2-7EA4-A30B-ABF0-EDF65505C0A5}', 'UninstallString', ResultStr) = false then
  begin
    vc9SP2Missing := true;
  end
 else 
  begin
    vc9SP2Missing := false;
  end;
  
  if RegQueryStringValue(HKLM64, 'SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\'+ ExpandConstant('{#MyAppName}'), 'UninstallString', ResultStr) = true then
  begin
  if MsgBox(ExpandConstant('{cm:UninstallOldVerion}'), mbConfirmation, MB_YESNO) = IDYES then
    begin
      ResultStr := RemoveQuotes(ResultStr);
      Exec(ResultStr, '/silent', '', SW_HIDE, ewWaitUntilTerminated, ResultCode);
    end
  end;
 result := true; 
end;

procedure InitializeWizard();
var
    AboutButton, CancelButton: TButton;
    URLLabel: TNewStaticText;
begin
  WizardForm.PAGENAMELABEL.Font.Color:= clred;
  WizardForm.PAGEDESCRIPTIONLABEL.Font.Color:= clBlue;
  WizardForm.LICENSEACCEPTEDRADIO.Checked:=true;
end;


function ShouldSkipPage(PageID:Integer):Boolean;
begin
  if PageID=wpSelectDir then
    result:=false;
    if RegKeyExists(HKLM64, 'Software\FJDTrionModel') then
      result:=true;
  if PageID=wpFinished then
    result:=false;
  if PageID=wpLicense then
    result:=false;
end; 

procedure SetEnv(aEnvName, aEnvValue: string; aIsInstall, aIsInsForAllUser: Boolean);
var
sOrgValue: string;
sFileName: string;
S1: AnsiString;                                                  //注意类型是AnsiString,不是string
bRetValue, bInsForAllUser: Boolean;
SL: TStringList;
x: integer;
begin
bInsForAllUser := aIsInsForAllUser;
if UsingWinNT then
begin
    if bInsForAllUser then
      bRetValue := RegQueryStringValue(HKLM, 'SYSTEM\CurrentControlSet\Control\Session Manager\Environment', aEnvName, sOrgValue)
    else
      bRetValue := RegQueryStringValue(HKCU, 'Environment', aEnvName, sOrgValue);
    sOrgValue := Trim(sOrgValue);
    begin
      S1 := aEnvValue;
      if pos(Uppercase(s1), Uppercase(sOrgValue)) = 0 then //还没有加入
      begin
        if aIsInstall then
        begin
          x := Length(sOrgValue);
          if (x > 0) and (StringOfChar(sOrgValue[x], 1) <> ';') then
            sOrgValue := sOrgValue + ';';
          sOrgValue := sOrgValue + S1;
        end;
      end else
      begin
        if not aIsInstall then
        begin
          StringChangeEx(sOrgValue, S1 + ';', '', True);
          StringChangeEx(sOrgValue, S1, '', True);
        end;
      end;

      if bInsForAllUser then
        RegWriteStringValue(HKLM, 'SYSTEM\CurrentControlSet\Control\Session Manager\Environment', aEnvName, sOrgValue)
      else
      begin
        if (not aIsInstall) and (Trim(sOrgValue) = '') then
          RegDeleteValue(HKCU, 'Environment', aEnvName)
        else
          RegWriteStringValue(HKCU, 'Environment', aEnvName, sOrgValue);
      end;
    end;
end else //非NT 系统,如Win98
begin
    SL := TStringList.Create;
    try
      sFileName := ExpandConstant('{sd}\autoexec.bat');
      LoadStringFromFile(sFileName, S1);
      SL.Text := s1;
      s1 :=   '"' + aEnvValue + '"';
      s1 := 'set '+aEnvName +'=%path%;' + s1 ;

      bRetValue := False;
      x := SL.IndexOf(s1);
      if x = -1 then
      begin
        if aIsInstall then
        begin
          SL.Add(s1);
          bRetValue := True;
        end;
      end else //还没添加
        if not aIsInstall then
        begin
          SL.Delete(x);
          bRetValue := True;
        end;

      if bRetValue then
        SL.SaveToFile(sFileName);
    finally
      SL.free;
    end;

end;
end;

function InitializeUninstall(): Boolean;
var MainRun: HWND;
var MVRun:HWND;
begin
MainRun := FindWindowByWindowName(ExpandConstant('{#MyAppName}'));
MVRun := FindWindowByWindowName(ExpandConstant('{#MyAppName}'));
if (MainRun<>0) or (MVRun<>0) then
  begin
          if MainRun<>0 then
          begin
            PostMessage(MainRun, 18, 0, 0);               
          end;
        if MVRun<>0 then
          begin
            PostMessage(MVRun, 18, 0, 0);                  
          end;
        DelTree(ExpandConstant('{app}'), True, True, True);
        Result :=true;                                    
      end;

MainRun := FindWindowByWindowName(ExpandConstant('TrionMetahub'));
MVRun := FindWindowByWindowName(ExpandConstant('TrionMetahub'));
if (MainRun<>0) or (MVRun<>0) then
  begin
          if MainRun<>0 then
          begin
            PostMessage(MainRun, 18, 0, 0);               
          end;
        if MVRun<>0 then
          begin
            PostMessage(MVRun, 18, 0, 0);                  
          end;
        DelTree(ExpandConstant('{app}'), True, True, True);
        Result :=true;                                    
      end;
      Result :=true; 
end;

procedure CurStepChanged(CurStep: TSetupStep);
var
  strContent: String;
  strVersion: String;
  intErrorCode: Integer;
  strSelf_Create_Version: String;
  strSelf_Delete_BAT: String;
  delPackage: String;
  languageName: String;
  appdatapath:String;
  licensepath:String;
  FileStream: TFileStream;
  langeuageIniPath:String;
  langeuageIniFilePath:String;
begin
  if CurStep = ssPostInstall then
   begin

   //拷贝License文件
   //[!].删除桌面图标
   DeleteFile(ExpandConstant('{userdesktop}\Trion Metahub.lnk'));
   DeleteFile(ExpandConstant('{commondesktop}\Trion Metahub.lnk'));
   appdatapath := ExpandConstant('{userappdata}') ;
   if (FileExists(appdatapath +'\FJDTrionModel\License.tr')) then
     begin
          appdatapath := ExpandConstant('{userappdata}') ;
     end
     else
     begin
        FileCopy(appdatapath + '\TrionMetahub\License.tr', appdatapath +'\FJDTrionModel\License.tr', True);
        FileCopy(appdatapath + '\TrionMetahub\data.bat', appdatapath +'\FJDTrionModel\data.bat', True);
        //DelTree(appdatapath + '\TrionMetahub', True, True, True);//删除目录
     end;

     langeuageIniPath := ExpandConstant('{userappdata}');
     langeuageIniFilePath := langeuageIniPath + '\FJDTrionModel\config\language.ini';
    if not FileExists(langeuageIniFilePath) then
    begin
      CreateDir(langeuageIniPath + '\FJDTrionModel\config');
      FileStream := TFileStream.Create(langeuageIniFilePath, fmCreate);
      try
      finally
        FileStream.Free;
      end;
    end;
     languageName := ActiveLanguage(); // 获取用户选择的语言
     if 'chinesesimplified' = languageName then
    begin
      SetIniString('Translation','Language','zh',ExpandConstant('{userappdata}\FJDTrionModel\config\language.ini'));
    end
    else if 'chinesetraditional' = languageName then
    begin
      SetIniString('Translation','Language','zh_TW',ExpandConstant('{userappdata}\FJDTrionModel\config\language.ini'));
    end
    else if 'japanese' = languageName then
    begin
      SetIniString('Translation','Language','ja',ExpandConstant('{userappdata}\FJDTrionModel\config\language.ini'));
    end   
    else if 'english' = languageName then
    begin
    SetIniString('Translation','Language','en',ExpandConstant('{userappdata}\FJDTrionModel\config\language.ini'));
    end
    else if 'Spanish' = languageName then
    begin
    SetIniString('Translation','Language','es',ExpandConstant('{userappdata}\FJDTrionModel\config\language.ini'));
    end;
   end;
  
 
  if CurStep = ssDone then
  begin
    delPackage := GetMyParam('/delpkg');
    if '1' = delPackage then
    begin
      strContent := ':try_delete' + #13 + #10 +
            'del "' + ExpandConstant('{srcexe}') + '"' + #13 + #10 +
            'if exist "' + ExpandConstant('{srcexe}') + '" goto try_delete' + #13 + #10 +
            'del %0';

      strSelf_Delete_BAT := ExtractFilePath(ExpandConstant('{tmp}')) + 'SelfDelete.bat';
      SaveStringToFile(strSelf_Delete_BAT, strContent, False);
      Exec(strSelf_Delete_BAT, '', '', SW_HIDE, ewNoWait, intErrorCode);
    end;

  
  end;
end;

procedure CurUninstallStepChanged(CurUninstallStep: TUninstallStep);//
begin
  SetEnv('Path',ExpandConstant('{app}\Dll'),false,true);
  SetEnv('Path',ExpandConstant('{app}\Dll'),false,false);
   RegDeleteKeyIncludingSubkeys(HKLM64, 'Software\FJDTrionModel')
  RegDeleteKeyIncludingSubkeys(HKLM64, 'Software\TrionMetahub')
  RegDeleteKeyIncludingSubkeys(HKLM64, 'Software\FJCloudCompare')
  RegDeleteKeyIncludingSubkeys(HKLM64, 'Software\FJDTrionMetahub')
end;